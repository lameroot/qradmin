<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:global-method-security
            jsr250-annotations="enabled"
            pre-post-annotations="enabled"
            secured-annotations="enabled"/>

    <security:http auto-config="true">
        <security:anonymous enabled="true"/>
        <security:intercept-url pattern="/**"/>
        <security:csrf disabled="true"/>
        <security:logout
                logout-url="/api/security/logout"
                delete-cookies="JSESSIONID"
                invalidate-session="true"
                success-handler-ref="logoutSuccessHandler"
        />
        <security:custom-filter ref="authFilter" before="PRE_AUTH_FILTER"/>
        <security:remember-me services-ref="rememberMeServices"/>
    </security:http>

    <bean id="authFilter" class="com.qr.qradmin.security.AuthFilter">
        <constructor-arg name="defaultFilterProcessesUrl" value="/api/security/login"/>
        <constructor-arg name="objectMapper" ref="objectMapper"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="rememberMeServices" ref="rememberMeServices"/>
        <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
        <property name="authenticationFailureHandler" ref="authenticationFailedHandler"/>
    </bean>
    <bean id="authenticationSuccessHandler" class="com.qr.qradmin.security.AuthenticationSuccessHandler"/>
    <bean id="authenticationFailedHandler" class="com.qr.qradmin.security.AuthenticationFailedHandler"/>
    <bean id="logoutSuccessHandler" class="com.qr.qradmin.security.LogoutSuccessHandler"/>

    <bean id="rememberMeAuthenticationProvider"
          class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg name="key" value="${security.rememberMe.key}"/>
    </bean>
    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg name="userDetailsService" ref="userService"/>
        <constructor-arg name="key" value="${security.rememberMe.key}"/>
        <constructor-arg name="tokenRepository" ref="persistentTokenRepository"/>
        <property name="alwaysRemember" value="true"/>
    </bean>
    <bean id="persistentTokenRepository"
          class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider"/>
        <security:authentication-provider ref="rememberMeAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>

    <!--<bean id="userService" class="com.qr.qradmin.service.entity.UserService"/>-->

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
</beans>